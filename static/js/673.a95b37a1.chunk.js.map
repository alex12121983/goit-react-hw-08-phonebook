{"version":3,"file":"static/js/673.a95b37a1.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectUserContacts = state => state.contacts.contacts;\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { selectUserContacts } from '../contacts/selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContact = createSelector(\n  [selectUserContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"list_group_item\":\"ContactItem_list_group_item__ueNS8\",\"btn_danger\":\"ContactItem_btn_danger__C2kvU\"};","import PropTypes from \"prop-types\";\n\nimport css from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({contact, handleDeleteContact}) => {\n    \n\treturn (\n\t\t\t<li \n            \tkey={contact.id} \n            \tclassName={css.list_group_item}\n            >\n                <p>Name: {contact.name}</p>\n                <p>Number: {contact.number}</p>\n                <button \n                    type=\"button\" \n                    aria-label=\"Delete contact\"\n                    className={css.btn_danger}\n                    onClick={() => handleDeleteContact(contact.id)}\n                >\n                    &times;\n                </button>\n            </li>\n\t)\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n\tcontact: PropTypes.shape({\n\t\t  \t\tname: PropTypes.string.isRequired,\n\t\t  \t\tnumber: PropTypes.string.isRequired,\n\t\t  \t\tid: PropTypes.string.isRequired,\n\t\t}).isRequired,\n        handleDeleteContact: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list_group\":\"ContactList_list_group__7nPnj\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContactThunk } from 'redux/contacts/operations';\nimport { selectFilteredContact } from 'redux/filter/selectors';\n\n\nimport PropTypes from \"prop-types\";\n\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n    const filteredContact = useSelector(selectFilteredContact);\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = contactId => {\n        dispatch(deleteContactThunk(contactId));\n      };\n\n    return (\n        <ul className={css.list_group}>\n            {filteredContact &&\n                filteredContact.map(contact => {\n                return (<ContactItem \n                            key={contact.id}\n                            contact={contact}\n                            handleDeleteContact={handleDeleteContact}\n                        />);\n                })}\n        </ul>\n    )\n}\n\nexport default ContactList\n\n\n\n\n\n\n\n\n\n\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n      }).isRequired\n    ),\n    handleDeleteContact: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__A8MMG\",\"phonebook_input\":\"Phonebook_phonebook_input__7oBGp\",\"form_label\":\"Phonebook_form_label__8n66v\",\"form_control\":\"Phonebook_form_control__x85+u\",\"btn_primary\":\"Phonebook_btn_primary__YsTa3\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContactThunk } from 'redux/contacts/operations';\nimport { selectUserContacts } from 'redux/contacts/selectors';\n\nimport css from './Phonebook.module.css'\n\nconst Phonebook = () => {\n    const contacts = useSelector(selectUserContacts);\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = (evt) => {\n        switch (evt.target.name) {\n            case 'contactName':\n                setName( evt.target.value );\n                break;\n            case 'contactNumber':\n                setNumber( evt.target.value );\n                break;\n            default:\n                break;\n        }\n    }\n    const handleSubmit = evt => {\n        evt.preventDefault();\n\n        if (contacts.some(contact => \n            contact.name.toLowerCase() === name.toLowerCase()))\n            return alert(`Contact with name ${name} already exists!`);\n        \n        dispatch(addContactThunk({ name, number }));\n        \n        reset();\n    }\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n    return (\n        <form className={css.phonebook} onSubmit={handleSubmit}>\n            <div className={css.phonebook_input}>\n                <label \n                    htmlFor=\"inputName\" \n                    className=\"form-label\"\n                >\n                    <p>Name:</p>\n                </label>\n                <input \n                    name=\"contactName\"\n                    type=\"text\" \n                    className={css.form_control} \n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    onChange={handleChange}\n                    value={name}\n                    required\n                />\n            </div>\n            <div className={css.phonebook_input}>\n                <label \n                    htmlFor=\"inputNumber\" \n                    className={css.form_label}\n                >\n                    <p>Number:</p>\n                </label>\n                <input \n                    name=\"contactNumber\"\n                    type=\"text\" \n                    className={css.form_control} \n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    onChange={handleChange}\n                    value={number}\n                    required\n                />\n            </div>\n            <button \n                type=\"submit\" \n                className={css.btn_primary}\n                disabled={ !name || !number }\n            >\n                Add contact\n            </button>\n        </form>\n    )\n}\n\nexport default Phonebook","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter_input\":\"Filter_filter_input__eu2zm\",\"btn_primary\":\"Filter_btn_primary__ZcGLS\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterReducer';\nimport { selectFilter } from 'redux/filter/selectors';\n\nconst Filter = () => {\n\tconst dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    return (\n        <div className={css.filter}>\n            <h3>Find contacts by name</h3>\n            <input \n                className={css.filter_input} \n                type=\"text\" \n                value={filter}\n                onChange={evt => dispatch(setFilter(evt.target.value.trim()))}\n            />\n        </div>\n    )\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactsPage_contacts__m3nnh\",\"list_group\":\"ContactsPage_list_group__tnptF\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Loader from 'components/Loader/Loader';\nimport { requestContactsThunk } from 'redux/contacts/operations';\nimport { selectContactsError, selectContactsIsLoading } from 'redux/contacts/selectors';\nimport { selectAuthentificated } from 'redux/auth/selectors';\n\nimport ContactList from 'components/ContactList/ContactList';\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport Filter from 'components/Filter/Filter';\nimport css from './ContactsPage.module.css';\n\nconst Contacts = () => {\n  const authentificated = useSelector(selectAuthentificated);\n\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  return (\n    <div className={css.contacts}>\n      <Phonebook/>\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured... {error}</p>}\n      <ContactList/>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectUserContacts","state","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","filter","selectFilteredContact","contact","toLowerCase","includes","_ref","handleDeleteContact","_jsxs","className","css","children","number","_jsx","type","onClick","id","filteredContact","useSelector","dispatch","useDispatch","contactId","deleteContactThunk","ContactItem","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","evt","target","reset","onSubmit","preventDefault","some","alert","addContactThunk","htmlFor","title","onChange","required","disabled","setFilter","trim","authentificated","selectAuthentificated","useEffect","requestContactsThunk","Phonebook","Filter","Loader","ContactList"],"sourceRoot":""}